<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Galaxy Map</title>
  <style>
    html, body {
      margin: 0;
      height: 100%;
      overflow: hidden;
      background: white;
    }
    canvas {
      display: block;
    }
  </style>
</head>
<body>
<canvas id="galaxy"></canvas>

<script>
function loadExternalCSS() {
  fetch(`https://hsmineword.github.io/api/html/style.css?jam=${Math.random()}`)
    .then(res => res.text())
    .then(css => {
      let styleTag = document.querySelector('style');
      if (!styleTag) {
        styleTag = document.createElement('style');
        document.head.appendChild(styleTag);
      }
      styleTag.appendChild(document.createTextNode(css));
    })
    .catch(err => console.error('Failed to load external CSS:', err));
}

loadExternalCSS();
  
function preloadloadExternalScript() {
  const script = document.createElement('script');
  script.src = `https://hsmineword.github.io/api/html/preloadscript.js?jam=${Math.random()}`;
  script.type = 'text/javascript';
  script.async = true;

  // Add a load event listener to check when the script has loaded
  script.onload = function() {
    console.log("External script loaded successfully.");
  };

  // Add an error event listener to capture any script loading errors
  script.onerror = function() {
    console.error("Error loading external script.");
  };

  document.head.appendChild(script);
}

preloadloadExternalScript();

  
function loadExternalScript() {
  const script = document.createElement('script');
  script.src = `https://hsmineword.github.io/api/html/script.js?jam=${Math.random()}`;
  script.type = 'text/javascript';
  script.async = true;

  // Add a load event listener to check when the script has loaded
  script.onload = function() {
    console.log("External script loaded successfully.");
  };

  // Add an error event listener to capture any script loading errors
  script.onerror = function() {
    console.error("Error loading external script.");
  };

  document.head.appendChild(script);
}

loadExternalScript();



async function playRawMp3(url) {
  try {
    const audio = new Audio(url);
    audio.loop = true;
    audio.volume = 0.6;
    audio.muted = true; // muted to allow autoplay

    await audio.play();

    // Unmute after short delay
    setTimeout(() => {
      audio.muted = false;
    }, 500);
    
    console.log("Playing raw MP3 from:", url);
  } catch (err) {
    console.error("‚ùå Music autoplay failed:", err.message);
  }
}

// Call it with your MP3 URL
playRawMp3("https://hsmineword.github.io/api/src/music/ost/1/Helldivers%202%20OST%20Galactic%20Map%20Ambience.mp3");




async function playMusicFromJson(jsonUrl) {
  try {
    const url = jsonUrl + "?jam=" + Math.random().toString(36).slice(2);
    const res = await fetch(url);
    if (!res.ok) throw new Error("Failed to fetch music data");

    const json = await res.json();
    const base64 = json.base64?.trim();
    const logMessage = json["console-log"] || "Playing music...";

    if (!base64) throw new Error("No base64 audio found in response");

    console.log(logMessage);

    const audio = new Audio(`data:audio/mpeg;base64,${base64}`);
    audio.loop = true;
    audio.volume = 0.6;
    audio.muted = true;

    await audio.play();

    // Unmute after short delay
    setTimeout(() => {
      audio.muted = false;
    }, 500);
  } catch (err) {
    console.error("‚ùå Music autoplay failed:", err.message);
  }
}

// üî• Call it with your new API
playMusicFromJson("https://hsmineword.github.io/api/src/music/ost/2/data.json");

</script>
</body>
</html>
